-module($MODULENAME).
-behaviour(supervisor).
-vsn(0).

%% Public API
-export([start_link/0]).

%% OTP supervisor Callbacks
-export([init/1]).

%%%-------------------------------------------------------------------
%%% Types and Macros
%%%-------------------------------------------------------------------

-define(CHILD(Id, Mod, Type, Args), {Id, {Mod, start_link, Args},
                                     permanent, 5000, Type, [Mod]}).

%%%-------------------------------------------------------------------
%%% Public API
%%%-------------------------------------------------------------------

%% @doc
%% Starts the supervisor
%%
%% @spec start_link() -> {ok, Pid} | ignore | {error, Error}
%% @end

start_link() ->
    supervisor:start_link({local, ?MODULE}, ?MODULE, []).

%%%-------------------------------------------------------------------
%%% OTP supervisor Callbacks
%%%-------------------------------------------------------------------

%% @private
%% @doc
%% Whenever a supervisor is started using supervisor:start_link/[2,3],
%% this function is called by the new process to find out about
%% restart strategy, maximum restart frequency and child
%% specifications.
%% @end
-spec init(Args) -> Result when
    Args :: term(),
    Result :: {ok, {SupFlags, [ChildSpec]}} |
              ignore |
              {error, Reason},
    SupFlags :: supervisor:strategy(),
    ChildSpec :: supervisor:child_spec(),
    Reason :: term().

init([]) ->
    {ok, {{one_for_one, 5, 10}, [?CHILD('SomeChild', 'SomeModule', worker, [])]}}.

%%%-------------------------------------------------------------------
%%% Internal Functions
%%%-------------------------------------------------------------------
